
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id            String    @id @default(uuid())
  name          String
  email         String    @unique
  role          Role      @default(member)
  department_id String
  approved      Boolean   @default(false)
  created_at    DateTime  @default(now())
  department    Department @relation(fields: [department_id], references: [id])
}

model Department {
  id      String   @id @default(uuid())
  name    String   @unique
  users   User[]
}

enum Role {
  member
  volunteer
  core
  super_user
}

model Event {
  id          Int      @id @default(autoincrement())
  type        String
  title       String
  date        String
  time        String
  location    String
  description String   @db.Text
  color       String   @default("primary")
  attendees   Int      @default(0)
  featured    Boolean  @default(false)
  image       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  tags        Tag[]    @relation("EventToTag")
  registrations Registration[]
}

model Tag {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  events    Event[]  @relation("EventToTag")
}

model Registration {
  id        Int      @id @default(autoincrement())
  userId    String
  eventId   Int
  createdAt DateTime @default(now())

  event     Event    @relation(fields: [eventId], references: [id], onDelete: Cascade)

  @@unique([userId, eventId])
}
